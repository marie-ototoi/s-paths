# https://docs.gitlab.com/ce/ci/yaml/README.html

stages:
  - test
  - build
  - deploy
  
services:
  - docker:dind

# Environment templates
# -> Describe common environments to run stages

.node: &node
  image: node
  tags:
    - node
  before_script:
    - npm install
  script: npm run $CI_JOB_STAGE
  # This folder is cached between builds
  # https://docs.gitlab.com/ce/ci/yaml/README.html#cache
  cache:
    paths:
      - node_modules/

.docker-deploy: &docker-deploy
  stage: deploy
  image: docker
  tags:
    - docker
  before_script:
    - mkdir -pv ~/.docker
    - echo "$TLSCACERT" > ~/.docker/ca.pem
    - echo "$TLSCERT " > ~/.docker/cert.pem
    - echo "$TLSKEY" > ~/.docker/key.pem
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker stack deploy --compose-file docker-compose.yml --with-registry-auth semanticStack
    # - docker service update  --with-registry-auth semanticStack_semanticpaths

# Test stage
#

UT:
  <<: *node
  stage: test

# Build stage
#

Assets:
  <<: *node
  stage: build

Docker:
  tags:
    - docker
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE:latest
    # - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  only:
    - master

# Deploy stage
# -> Automate deployment and provide continuous deployment

Production:
  <<: *docker-deploy
  variables:
    DOCKER_TLS_VERIFY: 1
    DOCKER_HOST: tcp://129.175.22.62:2376
    DOCKER_MACHINE_NAME: default
  only:
    - master
  when: manual
  environment:
    name: production
    url: http://semantic-paths.lri.fr

Staging:
  <<: *docker-deploy
  variables:
    DOCKER_TLS_VERIFY: 0
    DOCKER_HOST: tcp://195.83.213.227:2375
    DOCKER_MACHINE_NAME: default
  only:
    - master
  when: manual
  environment:
    name: staging
    url: https://s-paths.inria.fr

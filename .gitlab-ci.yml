# https://docs.gitlab.com/ce/ci/yaml/README.html

stages:
  - test
  - build
  
services:
 - docker:dind

# Environment templates
# -> Describe common environments to run stages

.node: &node
  image: node:9
  before_script:
    - npm install
  script: npm run $CI_JOB_STAGE
  # This folder is cached between builds
  # https://docs.gitlab.com/ce/ci/yaml/README.html#cache
  cache:
    paths:
      - node_modules/

# Build stage
# -> Run script to build any artifact needed by the application

#Assets:
#  <<: *node
#  tags:
#   - build
#  stage: build
#  artifacts:
#    paths:
#      - public

# Test stage
# -> Run each independent test script in parallel

UT:
  <<: *node
  tags:
   - test
  stage: test

build_semantic-paths:
  <<: *node
  tags:
   - docker
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.inria.fr
    - docker build -f Dockerfile.prod -t registry.gitlab.inria.fr/mdestand/semantic-paths .
    - docker push registry.gitlab.inria.fr/mdestand/semantic-paths:latest
  only:
    - master

#deploy_semantic-paths:
#  stage: deploy
#  tags:
#   - docker
#  image: registry.gitlab.inria.fr/mdestand/semantic-paths
#  script:
    # add the server as a known host
#    - mkdir ~/.ssh
#    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
    # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
#    - eval $(ssh-agent -s)
#    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    # log into Docker registry
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.inria.fr
    # stop container, remove image.
#    - ssh deployer@virtuoso.lri.fr "docker stack deploy --compose-file docker-compose-prod.yml stackSemanticPaths" || true
#  only:
#    - master
#  when: manual 
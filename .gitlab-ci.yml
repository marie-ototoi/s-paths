# https://docs.gitlab.com/ce/ci/yaml/README.html

stages:
  - test
  - build
  - deploy
  
services:
 - docker:dind

# Environment templates
# -> Describe common environments to run stages

.node: &node
  image: node:9
  before_script:
    - npm install
  script: npm run $CI_JOB_STAGE
  # This folder is cached between builds
  # https://docs.gitlab.com/ce/ci/yaml/README.html#cache
  cache:
    paths:
      - node_modules/

# Test stage
UT:
  <<: *node
  tags:
   - test
  stage: test

# Build stage
build_semantic-paths:
  tags:
   - docker
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.inria.fr
  #  - docker build -f Dockerfile.prod -t registry.gitlab.inria.fr/mdestand/semantic-paths .
  #  - docker push registry.gitlab.inria.fr/mdestand/semantic-paths:latest
    - docker pull mongo:3.6
    - docker tag mongo:3.6 registry.gitlab.inria.fr/mdestand/semantic-paths:mongo
    - docker push registry.gitlab.inria.fr/mdestand/semantic-paths:mongo
    - docker pull tenforce/virtuoso:1.3.1-virtuoso7.2.2
    - docker tag tenforce/virtuoso:1.3.1-virtuoso7.2.2 registry.gitlab.inria.fr/mdestand/semantic-paths:virtuoso
    - docker push registry.gitlab.inria.fr/mdestand/semantic-paths:virtuoso
  only:
    - master


# Deploy stage
deploy_semantic-paths:
  tags:
   - docker
  stage: deploy
  variables:
    DOCKER_TLS_VERIFY: 1
    DOCKER_HOST: tcp://129.175.22.62:2376
    DOCKER_MACHINE_NAME: default
  image: docker:latest
  script:
    - mkdir -pv ~/.docker
    - echo "$TLSCACERT" > ~/.docker/ca.pem
    - echo "$TLSCERT" > ~/.docker/cert.pem
    - echo "$TLSKEY" > ~/.docker/key.pem
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.inria.fr
    - docker stack deploy  --with-registry-auth --compose-file docker-compose.yml semanticStack
  only:
    - master
  when: manual